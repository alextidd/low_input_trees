conda.enabled = true

executor {
    name = 'lsf'
    perJobMemLimit = true
}

process {
    errorStrategy = { task.exitStatus in [9,130,143,137,104,134,139] ? 'retry' : 'terminate' }
    maxRetries = 6
    withLabel: normal {
        queue = "normal"
        cpus = 1
        memory = { 2.GB * task.attempt * task.attempt }
    }
    withLabel: normal4core {
        queue = "normal"
        cpus = 4
        memory = { 2.GB * task.attempt * task.attempt }
    }
    withLabel: normal10gb {
        queue = "normal"
        cpus = 1
        memory = { 10.GB * task.attempt }
    }
    withLabel: normal100gb {
        queue = "normal"
        cpus = 1
        memory = { 100.GB * task.attempt }
    }
    withLabel: week100gb {
        queue = "week"
        cpus = 1
        memory = { 100.GB * task.attempt }
    }
    withLabel: long {
        queue = "long"
        cpus = 1
        memory = { 2.GB * task.attempt * task.attempt }
    }
    withLabel: long16core {
        queue = "long"
        cpus = 16
        memory = { 2.GB * task.attempt * task.attempt }
    }
    withLabel: long10gb {
        queue = "long"
        cpus = 1
        memory = { 10.GB * task.attempt * task.attempt }
    }
    withLabel: long16core10gb {
        queue = "long"
        cpus = 16
        memory = { 10.GB * task.attempt * task.attempt }
        scratch = true
    }
    withLabel: week {
        queue = "week"
        cpus = 1
        memory = { 2.GB * task.attempt * task.attempt }
    }
    withLabel: week16core10gb {
        queue = "week"
        cpus = 16
        memory = { 10.GB * task.attempt * task.attempt }
    }
    withLabel: normal20gb {
        queue = "normal"
        cpus = 1
        memory = { 20.GB * task.attempt * task.attempt }
    }
    withLabel: normal4core20gb {
        queue = "normal"
        cpus = 4
        memory = { 20.GB * task.attempt * task.attempt }
    }
    withLabel: basement100gb {
        queue = "basement"
        cpus = 1
        memory = { 100.GB * task.attempt }
    }
}
